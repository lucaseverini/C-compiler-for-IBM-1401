
<program>
    <GlobalVariableDeclaration>
        <BareType>
            int
        </BareType>
        <VariableDeclarationList>
            <Initializer>
                <Identifier>
                    glogInt
                </Identifier>
                <Number>
                    0
                </Number>
            </Initializer>
        </VariableDeclarationList>
    </GlobalVariableDeclaration>
    <GlobalVariableDeclaration>
        <BareType>
            int
        </BareType>
        <VariableDeclarationList>
            <Initializer>
                <PointerDeclaration>
                    <Identifier>
                        globPtr
                    </Identifier>
                </PointerDeclaration>
                <Number>
                    0
                </Number>
            </Initializer>
        </VariableDeclarationList>
    </GlobalVariableDeclaration>
    <FunctionDefinition>
        <Type>
            int
            <BareType>
                int
            </BareType>
        </Type>
        <Identifier>
            fact
        </Identifier>
        <ParameterList>
            <FunctionDefinitionParameter>
                n
                <Type>
                    int
                    <BareType>
                        int
                    </BareType>
                </Type>
                <Identifier>
                    n
                </Identifier>
            </FunctionDefinitionParameter>
            <FunctionDefinitionParameter>
                x
                <Type>
                    int
                    <BareType>
                        int
                    </BareType>
                </Type>
                <Identifier>
                    x
                </Identifier>
            </FunctionDefinitionParameter>
        </ParameterList>
        <FunctionBody>
            <LocalVariableDeclaration>
                <BareType>
                </BareType>
                <VariableDeclarationList>
                    <Initializer>
                        <Identifier>
                            c
                        </Identifier>
                        <CharacterConstant>
                            'd'
                        </CharacterConstant>
                    </Initializer>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <LocalVariableDeclaration>
                <BareType>
                    int
                </BareType>
                <VariableDeclarationList>
                    <Initializer>
                        <Identifier>
                            a
                        </Identifier>
                        <Number>
                            0
                        </Number>
                    </Initializer>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <LocalVariableDeclaration>
                <BareType>
                    int
                </BareType>
                <VariableDeclarationList>
                    <Initializer>
                        <Identifier>
                            b
                        </Identifier>
                        <Number>
                            1
                        </Number>
                    </Initializer>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <IfStatement>
                <Equal>
                    <Identifier>
                        c
                    </Identifier>
                    <CharacterConstant>
                        'a'
                    </CharacterConstant>
                </Equal>
                <BlockStatement>
                    <ExpressionStatement>
                        <PostIncrement>
                            <Identifier>
                                c
                            </Identifier>
                        </PostIncrement>
                    </ExpressionStatement>
                    <ExpressionStatement>
                        <Assign>
                            <Identifier>
                                c
                            </Identifier>
                            <CharacterConstant>
                                'f'
                            </CharacterConstant>
                        </Assign>
                    </ExpressionStatement>
                    <ExpressionStatement>
                        <Assign>
                            <Identifier>
                                a
                            </Identifier>
                            <Identifier>
                                b
                            </Identifier>
                        </Assign>
                    </ExpressionStatement>
                    <ExpressionStatement>
                        <Assign>
                            <Identifier>
                                b
                            </Identifier>
                            <Number>
                                1000
                            </Number>
                        </Assign>
                    </ExpressionStatement>
                </BlockStatement>
            </IfStatement>
            <ConditionalOperator>
                <Equal>
                    <Identifier>
                        n
                    </Identifier>
                    <Number>
                        0
                    </Number>
                </Equal>
                <Number>
                    1
                </Number>
                <Multiply>
                    <Identifier>
                        n
                    </Identifier>
                    <FunctionCall>
                        <Identifier>
                            fact
                        </Identifier>
                        <Subtract>
                            <Identifier>
                                n
                            </Identifier>
                            <Number>
                                1
                            </Number>
                        </Subtract>
                    </FunctionCall>
                </Multiply>
            </ConditionalOperator>
            <ReturnStatement>
            </ReturnStatement>
        </FunctionBody>
    </FunctionDefinition>
    <FunctionDefinition>
        <Type>
            int
            <BareType>
                int
            </BareType>
        </Type>
        <Identifier>
            is_prime
        </Identifier>
        <ParameterList>
            <FunctionDefinitionParameter>
                n
                <Type>
                    int
                    <BareType>
                        int
                    </BareType>
                </Type>
                <Identifier>
                    n
                </Identifier>
            </FunctionDefinitionParameter>
        </ParameterList>
        <FunctionBody>
            <LocalVariableDeclaration>
                <BareType>
                    int
                </BareType>
                <VariableDeclarationList>
                    <Identifier>
                        i
                    </Identifier>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <Assign>
                <Identifier>
                    i
                </Identifier>
                <Number>
                    2
                </Number>
            </Assign>
            <ForStatement>
                <LessThanOrEqual>
                    <Multiply>
                        <Identifier>
                            i
                        </Identifier>
                        <Identifier>
                            i
                        </Identifier>
                    </Multiply>
                    <Identifier>
                        n
                    </Identifier>
                </LessThanOrEqual>
                <PreIncrement>
                    <Identifier>
                        i
                    </Identifier>
                </PreIncrement>
                <Modulo>
                    <Not>
                        <Identifier>
                            n
                        </Identifier>
                    </Not>
                    <Identifier>
                        i
                    </Identifier>
                </Modulo>
                <IfStatement>
                    <Number>
                        0
                    </Number>
                    <ReturnStatement>
                    </ReturnStatement>
                </IfStatement>
            </ForStatement>
            <Number>
                1
            </Number>
            <ReturnStatement>
            </ReturnStatement>
        </FunctionBody>
    </FunctionDefinition>
    <FunctionDefinition>
        <Type>
            int
            <BareType>
                int
            </BareType>
        </Type>
        <Identifier>
            main
        </Identifier>
        <ParameterList>
            <FunctionDefinitionParameter>
                argc
                <Type>
                    int
                    <BareType>
                        int
                    </BareType>
                </Type>
                <Identifier>
                    argc
                </Identifier>
            </FunctionDefinitionParameter>
            <FunctionDefinitionParameter>
                <Type>
                    <BareType>
                    </BareType>
                </Type>
                <Identifier>
                    argv
                </Identifier>
            </FunctionDefinitionParameter>
        </ParameterList>
        <FunctionBody>
            <LocalVariableDeclaration>
                <BareType>
                </BareType>
                <VariableDeclarationList>
                    <Initializer>
                        <ArrayDeclaration>
                            <Identifier>
                                str
                            </Identifier>
                        </ArrayDeclaration>
                        <StringLiteral>
                            "hfjkkjsfd"
                        </StringLiteral>
                    </Initializer>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <LocalVariableDeclaration>
                <BareType>
                    int
                </BareType>
                <VariableDeclarationList>
                    <Initializer>
                        <Identifier>
                            n
                        </Identifier>
                        <Number>
                            0
                        </Number>
                    </Initializer>
                </VariableDeclarationList>
            </LocalVariableDeclaration>
            <ExpressionStatement>
                <FunctionCall>
                    <Identifier>
                        printf
                    </Identifier>
                    <Comma>
                        <StringLiteral>
                            "%s"
                        </StringLiteral>
                        <Identifier>
                            str
                        </Identifier>
                    </Comma>
                </FunctionCall>
            </ExpressionStatement>
            <BlockStatement>
                <Modulo>
                    <Identifier>
                        n
                    </Identifier>
                    <Number>
                        3
                    </Number>
                </Modulo>
                <SwitchStatement>
                    <Number>
                        0
                    </Number>
                    <ExpressionStatement>
                        <FunctionCall>
                            <Identifier>
                                printf
                            </Identifier>
                            <Comma>
                                <StringLiteral>
                                    "%d\n"
                                </StringLiteral>
                                <FunctionCall>
                                    <Identifier>
                                        fact
                                    </Identifier>
                                    <Identifier>
                                        n
                                    </Identifier>
                                </FunctionCall>
                            </Comma>
                        </FunctionCall>
                    </ExpressionStatement>
                    <BreakStatement>
                    </BreakStatement>
                    <Number>
                        1
                    </Number>
                    <ExpressionStatement>
                        <FunctionCall>
                            <Identifier>
                                printf
                            </Identifier>
                            <Comma>
                                <StringLiteral>
                                    "%d\n"
                                </StringLiteral>
                                <FunctionCall>
                                    <Identifier>
                                        is_prime
                                    </Identifier>
                                    <Identifier>
                                        n
                                    </Identifier>
                                </FunctionCall>
                            </Comma>
                        </FunctionCall>
                    </ExpressionStatement>
                    <ExpressionStatement>
                        <FunctionCall>
                            <Identifier>
                                printf
                            </Identifier>
                            <Comma>
                                <Comma>
                                    <StringLiteral>
                                        "%d, %d\n"
                                    </StringLiteral>
                                    <FunctionCall>
                                        <Identifier>
                                            fact
                                        </Identifier>
                                        <Identifier>
                                            n
                                        </Identifier>
                                    </FunctionCall>
                                </Comma>
                                <FunctionCall>
                                    <Identifier>
                                        isPrime
                                    </Identifier>
                                    <Identifier>
                                        n
                                    </Identifier>
                                </FunctionCall>
                            </Comma>
                        </FunctionCall>
                    </ExpressionStatement>
                    <BlockStatenent>
                    </BlockStatenent>
                </SwitchStatement>
            </BlockStatement>
            <LessThan>
                <PostIncrement>
                    <Identifier>
                        n
                    </Identifier>
                </PostIncrement>
                <Number>
                    10
                </Number>
            </LessThan>
            <DoWhileExpression>
            </DoWhileExpression>
        </FunctionBody>
    </FunctionDefinition>
</program>
