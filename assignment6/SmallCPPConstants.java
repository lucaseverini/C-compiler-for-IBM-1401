/* Generated By:JavaCC: Do not edit this line. SmallCPPConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SmallCPPConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BREAK = 5;
  /** RegularExpression Id. */
  int CASE = 6;
  /** RegularExpression Id. */
  int CHAR = 7;
  /** RegularExpression Id. */
  int CONTINUE = 8;
  /** RegularExpression Id. */
  int _DEFAULT = 9;
  /** RegularExpression Id. */
  int DO = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int GOTO = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int LONG = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int SHORT = 18;
  /** RegularExpression Id. */
  int SIZEOF = 19;
  /** RegularExpression Id. */
  int STATIC = 20;
  /** RegularExpression Id. */
  int SWITCH = 21;
  /** RegularExpression Id. */
  int TYPEDEF = 22;
  /** RegularExpression Id. */
  int UNSIGNED = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int SEMI_COLON = 25;
  /** RegularExpression Id. */
  int PLUS_PLUS = 26;
  /** RegularExpression Id. */
  int MINUS_MINUS = 27;
  /** RegularExpression Id. */
  int PLUS = 28;
  /** RegularExpression Id. */
  int MINUS = 29;
  /** RegularExpression Id. */
  int STAR = 30;
  /** RegularExpression Id. */
  int DIVIDE = 31;
  /** RegularExpression Id. */
  int MOD = 32;
  /** RegularExpression Id. */
  int BIT_AND = 33;
  /** RegularExpression Id. */
  int BIT_OR = 34;
  /** RegularExpression Id. */
  int BIT_XOR = 35;
  /** RegularExpression Id. */
  int BIT_NOT = 36;
  /** RegularExpression Id. */
  int BOOLEAN_NOT = 37;
  /** RegularExpression Id. */
  int BOOLEAN_AND = 38;
  /** RegularExpression Id. */
  int BOOLEAN_OR = 39;
  /** RegularExpression Id. */
  int GREATER_THAN = 40;
  /** RegularExpression Id. */
  int LESS_THAN = 41;
  /** RegularExpression Id. */
  int LEFT_SHIFT = 42;
  /** RegularExpression Id. */
  int RIGHT_SHIFT = 43;
  /** RegularExpression Id. */
  int EQUALS = 44;
  /** RegularExpression Id. */
  int EQUALS_EQUALS = 45;
  /** RegularExpression Id. */
  int NOT_EQUALS = 46;
  /** RegularExpression Id. */
  int L_PAREN = 47;
  /** RegularExpression Id. */
  int R_PAREN = 48;
  /** RegularExpression Id. */
  int IDENTIFIER = 49;
  /** RegularExpression Id. */
  int NUMBER = 50;
  /** RegularExpression Id. */
  int STRING_LIT = 51;
  /** RegularExpression Id. */
  int CHARACTER_CONST = 52;
  /** RegularExpression Id. */
  int COMMENT = 53;
  /** RegularExpression Id. */
  int LINE_COMMENT = 54;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 55;
  /** RegularExpression Id. */
  int NEWLINE = 56;
  /** RegularExpression Id. */
  int NOT_NEWLINE = 57;
  /** RegularExpression Id. */
  int IDENTIFIER_CHAR = 58;
  /** RegularExpression Id. */
  int DIGIT = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"break\"",
    "\"case\"",
    "\"char\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"else\"",
    "\"for\"",
    "\"goto\"",
    "\"if\"",
    "\"int\"",
    "\"long\"",
    "\"return\"",
    "\"short\"",
    "\"sizeof\"",
    "\"static\"",
    "\"switch\"",
    "\"typedef\"",
    "\"unsigned\"",
    "\"while\"",
    "\";\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"~\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\">\"",
    "\"<\"",
    "\"<<\"",
    "\">>\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "<IDENTIFIER>",
    "<NUMBER>",
    "<STRING_LIT>",
    "<CHARACTER_CONST>",
    "<COMMENT>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<NEWLINE>",
    "<NOT_NEWLINE>",
    "<IDENTIFIER_CHAR>",
    "<DIGIT>",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"?\"",
  };

}
